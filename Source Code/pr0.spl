while (size input{1} >= 3)
{
    stream buffer = 3 <- input{1}

    print (buffer[3])
    print (2 * (buffer[2]))
    print (3 * (buffer[1]) - 1)
}

process 3 <- input{1} as a
{
    print a[3]
    print 2 * a[2]
    print 3 * a[1] - 1
}

while (size input{1} > 1)
{
    print (next input{1})
    print (next input{1})
    print (next input{2})
}

process 2 <- input{1}, 1 <- input{2} as a, b
{
    print a[1]
    print a[2]
    print b[1]
}

while (has_next input{3}) 
{
    int c = next input{3}
    int b = next input{2}
    int a = next input{1}

    print c
    print b
    print a
    print (a + b)
    print (b + c)
}

process input{1}, input{2}, input{3} as a, b, c
{
    print c
    print b
    print a
    print a + b
    print b + c
}

process 1 <- input{1}, 1 <- input{2}, 1 <- input{3} as a, b, c
{
    print c[1]
    print b[1]
    print a[1]
    print a[1] + b[1]
    print b[1] + c[1]
}

process [a1] from input{1}, [b1] from input{2}, [c1] from input{3}
{
    print c1
    print b1
    print a1
    print a1 + b1
    print b1 + c1
}

process [a1, a2] from input{1}, [b1] from input{2}
{
    print a1
    print a2
    print b1
}

process [a1, a2, a3] from input{1}
{
    print a3
    print 2 * a2
    print 3 * a1 - 1
}